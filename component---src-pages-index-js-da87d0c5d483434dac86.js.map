{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/logo.png","webpack:///./src/utils/typography.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","d","query","glamorous__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_ref","data","createElement","allMarkdownRemark","edges","map","_ref2","node","key","id","a","to","fields","slug","css","textDecoration","color","H3","frontmatter","title","excerpt","m","module","exports","require","default","RH2","glamorous","h2","@media(max-width: 400px)","fontSize","Layout","children","gatsby__WEBPACK_IMPORTED_MODULE_7__","render","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","site","siteMetadata","name","content","property","style","margin","maxWidth","padding","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","verticalAlign","width","src","logo","alt","display","activeStyle","paddingTop","_public_static_d_3667756588_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","func","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","props","Consumer","object","string","isRequired","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","p","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_doelger__WEBPACK_IMPORTED_MODULE_1__","typography_theme_doelger__WEBPACK_IMPORTED_MODULE_1___default","doelgerTheme","overrideThemeStyles","options","rhythm","backgroundImage","Typography"],"mappings":"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","file":"component---src-pages-index-js-da87d0c5d483434dac86.js","sourcesContent":["import React from 'react'\nimport g from 'glamorous'\nimport Link from 'gatsby-link'\nimport Layout from '../components/layout'\nimport { rhythm } from '../utils/typography'\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            css={{ textDecoration: `none`, color: `inherit` }}\n          >\n            <g.H3>{node.frontmatter.title}</g.H3>\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import g from 'glamorous'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\nimport Link from 'gatsby-link'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport glamorous from 'glamorous'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport logo from './logo.png'\n\nconst RH2 = glamorous.h2({\n  '@media(max-width: 400px)': {\n    fontSize: `1.2rem`,\n  },\n})\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        logoImage: imageSharp(id: { regex: \"/logo/\" }) {\n          resolutions(width: 50, height: 50) {\n            ...GatsbyImageSharpResolutions\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet>\n          <title>{data.site.siteMetadata.title}</title>\n          <meta name=\"description\" content=\"one guy's thoughts\" />\n          <meta name=\"keywords\" content=\"Life,Design,Games,Code,Board games\" />\n          <meta name=\"author\" content=\"Siow Yi Sheng\" />\n          <meta property=\"og:title\" content=\"Life,Design,Games,Code\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://foreverfighter.github.io/blog/\"\n          />\n          <meta property=\"og:description\" content=\"one guy's thoughts\" />\n        </Helmet>\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '1.45rem 1.0875rem',\n          }}\n        >\n          <header>\n            <Link to=\"/\">\n              <img\n                style={{ margin: `0 10px 0 0`, verticalAlign: `-40%` }}\n                width={40}\n                src={logo}\n                alt=\"Logo\"\n              />\n            </Link>\n            <RH2 style={{ display: `inline` }}>\n              <Link\n                to=\"/life/\"\n                style={{ color: `#ff2268` }}\n                activeStyle={{ textDecoration: `underline overline` }}\n              >\n                Life,\n              </Link>\n              <Link\n                to=\"/design/\"\n                style={{ color: `#e86013` }}\n                activeStyle={{ textDecoration: `underline overline` }}\n              >\n                Design,\n              </Link>\n              <Link\n                to=\"/games/\"\n                style={{ color: `#8213e8` }}\n                activeStyle={{ textDecoration: `underline overline` }}\n              >\n                Games,\n              </Link>\n              <Link\n                to=\"/code/\"\n                style={{ color: `#2269ff` }}\n                activeStyle={{ textDecoration: `underline overline` }}\n              >\n                Code\n              </Link>\n            </RH2>\n          </header>\n        </div>\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.func,\n}\n\nexport default Layout\n\n// export const query = graphql`\n//   query SiteTitleQuery {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//     logoImage: imageSharp(id: { regex: \"/logo/\" }) {\n//       resolutions(width: 50, height: 50) {\n//         ...GatsbyImageSharpResolutions\n//       }\n//     }\n//   }\n// `\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-82be2b9bccb23865797b9bc618b53096.png\";","import Typography from 'typography'\nimport doelgerTheme from 'typography-theme-doelger'\ndoelgerTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  'a': {\n    backgroundImage: `none`,\n  }\n})\n\nconst typography = new Typography(doelgerTheme)\n\nexport default typography;\n"],"sourceRoot":""}